{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","pages/local/index.jsx"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","id","index","config","path","ajax","state","fun2","a","props","get","successTip","errorTip","result","console","log","result2","setTimeout","number","Component"],"mappings":"yGAAAA,EAAOC,QAAU,EAAQ,M,sGCAzB,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,O,yCC/BRC,EAAK,E,+CCWYC,EADpBC,YAAO,CAACC,KAAM,QAASC,MAAM,G,gNAE1BC,MAAQ,G,0DA+BH,yC,EASLC,K,YAAO,4BAAAC,EAAA,sEACkB,EAAKC,MAAMJ,KAAKK,IAAI,gBAAiB,KAAM,CAACC,WAAY,eAAMC,SAAU,iBAD1F,cACGC,EADH,OAGHC,QAAQC,IAAI,KACZD,QAAQC,IAAIF,GAEZC,QAAQC,IAAI,MANT,kBAQI,QAAUF,GARd,2C,wLAhBmBlB,KAAKY,O,OAArBS,E,OACNF,QAAQC,IAAIC,GAEZF,QAAQC,IAAI,M,wPAlCT,IAAIzB,SAAQ,SAACV,EAASC,GACzBoC,YAAW,kBAAMrC,EAAQ,oCAAe,Q,cAwClCsC,E,OACNJ,QAAQC,IAAIG,G,kBAEL,OAASA,G,gIAehB,OACI,kBAAC,IAAD,uB,GAtDuBC,a,EDT1B,aAAelB,IAAO,I","file":"static/js/8.5ffba451.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","var id = 0;\nexport default function _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}","import React, {Component} from 'react';\nimport config from 'src/commons/config-hoc';\nimport PageContent from 'src/layouts/page-content';\n\nfunction getNumber() {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => resolve('我是number吗？'), 1000);\n    });\n}\n\n@config({path: '/test', ajax: true})\nexport default class index extends Component {\n    state = {};\n\n    async componentDidMount() {\n        // const values = [\n        //     undefined,\n        //     null,\n        //     NaN,\n        //     0,\n        //     false,\n        //     '',\n        // ];\n        //\n        // values.forEach(val => {\n        //     const b = val ?? 123;\n        //     console.log(val, b);\n        //     // fn({name: val});\n        // });\n        // Promise.allSettled([Promise.resolve(1), Promise.reject(22)])\n        //     .then(values => {\n        //         console.log(values);\n        //     });\n\n        // const result = await this.fun();\n        // console.log(result);\n        const result2 = await this.fun2();\n        console.log(result2);\n\n        console.log(6666);\n\n    }\n\n    #a = '我是私有变量';\n\n    async fun() {\n        const number = await getNumber();\n        console.log(number);\n\n        return 'fun:' + number;\n    }\n\n    fun2 = async () => {\n        const result = await this.props.ajax.get('/mock/users11', null, {successTip: '成功', errorTip: '失败'});\n\n        console.log(123);\n        console.log(result);\n\n        console.log(3333);\n\n        return 'fun2:' + result;\n    };\n\n    render() {\n        return (\n            <PageContent>\n                init index\n            </PageContent>\n        );\n    }\n}\n"],"sourceRoot":""}